{"version":3,"sources":["images/left-arrow-active.svg","images/left-arrow-inactive.svg","images/right-arrow-active.svg","images/right-arrow-inactive.svg","components/paginationBar/index.js","components/tabularViewer/index.js","components/csvUploader/fileUploader.js","components/csvUploader/component.js","services/csv-upload/index.js","components/csvUploader/index.js","utility/index.js","reportWebVitals.js","index.js"],"names":["PaginationWrapper","styled","div","LeftArrowInActive","RightArrowInActive","PageLimitSelector","select","PaginationBar","pageRangeDisplayed","activePage","itemsCountPerPage","totalItemsCount","onChange","pageLimit","onPageLimitChange","hideFirstLastPages","prevPageText","src","LeftArrowActive","id","alt","nextPageText","RightArrowActive","value","e","target","label","disabled","useStyles","makeStyles","table","minWidth","TableWrapper","TableHeadingWrapper","SortingArrowWrapper","Arrow","ArrowUp","ArrowDown","RenderTableBody","data","TableBody","map","row","idx","TableRow","TableCell","country","align","capital","num","population","Math","abs","Number","toFixed","language","president","TabularViewer","props","classes","handleSortChange","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","onClick","length","FileUploader","open","csvData","onFileUpload","onRemoveFile","fileUploadAction","cancelAction","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","onDrop","addRemoveButton","noClick","DialogActions","Button","color","autoFocus","PageContainer","TopSectionWrapper","FiltersWrapper","SearchBar","input","Filter","ButtonWrapper","CSV_TEMPLATE","CsvUploaderComponent","state","handleChange","handlePageChange","handlePageLimitChange","uploadFileToDb","handleSearchTextChange","handleFilterChange","removeAllCountries","useState","openFileUploader","setOpenFileUploader","placeholder","filters","filterData","filename","isLoading","LinearProgress","limit","dataCount","SaveCountries","a","error","fetch","method","headers","body","JSON","stringify","catch","err","response","Promise","reject","resolve","json","GetCountries","GetFilters","RemoveCountries","CsvUploader","initiateData","getData","getFilters","componentDidMount","pageNumber","setState","skip","text","searchText","callFuncDelay","callback","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","columnName","order","sortBy","key","filterName","isFilterChange","flag","trim","getDataQuery","isOnlyPageChange","requestObj","searchKeys","searchKeyword","console","log","responseData","countries","count","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4231979.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/left-arrow-active.75497405.svg\";","export default __webpack_public_path__ + \"static/media/left-arrow-inactive.be6a0b16.svg\";","export default __webpack_public_path__ + \"static/media/right-arrow-active.574b15af.svg\";","export default __webpack_public_path__ + \"static/media/right-arrow-inactive.48294948.svg\";","import React from 'react';\nimport styled from 'styled-components'\nimport Pagination from \"react-js-pagination\";\nimport LeftArrowActive from '../../images/left-arrow-active.svg'\nimport LeftArrowInActive from '../../images/left-arrow-inactive.svg'\nimport RightArrowActive from '../../images/right-arrow-active.svg'\nimport RightArrowInActive from '../../images/right-arrow-inactive.svg'\n\n\nconst PaginationWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n    justify-content: space-between;\n    \n    ul {\n        margin: 0;\n        padding: 0;\n        list-style-type: none;\n    }\n\n    li {\n        float: left !important;\n    }\n\n    .pagination li a {\n        color: #7d96a1;\n        background-color: white;\n        font-weight: bold;\n        padding: 5px 10px;\n        text-decoration: none;\n        transition: background-color .3s;\n        border: 1px solid #ddd;\n    }\n\n    .pagination li:first-child a {\n        border-top-left-radius: 10px;\n        border-bottom-left-radius: 10px;\n        font-weight: bold;\n    }\n\n    .pagination .disabled #prev {\n        content: url(${LeftArrowInActive});\n    }\n\n    .pagination .disabled #next {\n        content: url(${RightArrowInActive});\n    }\n\n    .pagination .active a {\n        color: salmon;\n    }\n\n    .pagination li:last-child a {\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n        font-weight: bold;\n    }\n`\n\nconst PageLimitSelector = styled.select`\n    border-radius: 10px;\n    border: 1px solid #ddd;\n    padding: 2px;\n    margin-top: -8px;\n    color: #7d96a1;\n    font-weight: bold;\n    outline: none;\n`\n\n\nconst PaginationBar = ({ pageRangeDisplayed, activePage, itemsCountPerPage, totalItemsCount, onChange, pageLimit, onPageLimitChange }) => (\n    <PaginationWrapper>\n        <Pagination\n            hideFirstLastPages\n            pageRangeDisplayed={pageRangeDisplayed}\n            activePage={activePage}\n            itemsCountPerPage={itemsCountPerPage}\n            totalItemsCount={totalItemsCount}\n            prevPageText={<img src={LeftArrowActive} id='prev' alt=\"\" />}\n            nextPageText={<img src={RightArrowActive} id='next' alt=\"\" />}\n            onChange={onChange}\n        />\n\n        <PageLimitSelector\n            value={pageLimit || \"25\"}\n            onChange={(e) => onPageLimitChange(e.target.value)}\n            label=\"Age\"\n        >\n            <option disabled value={\"\"}>Page Limit</option>\n            <option value={\"25\"}>25</option>\n            <option value={\"50\"}>50</option>\n            <option value={\"100\"}>100</option>\n            <option value={\"500\"}>500</option>\n        </PageLimitSelector>\n    </PaginationWrapper>\n);\n\nexport default PaginationBar;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst TableWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: calc(100vh - 300px);\n  overflow-y: auto;\n`;\n\nconst TableHeadingWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n  align-items: center;\n`;\n\nconst SortingArrowWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nconst Arrow = styled.div`\n  width: 0;\n  height: 0;\n  cursor: pointer;\n  opacity: 0.2;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst ArrowUp = styled(Arrow)`\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-bottom: 5px solid black;\n`;\n\nconst ArrowDown = styled(Arrow)`\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-top: 5px solid black;\n`;\n\nconst convertToInternationalCurrencySystem = (num) =>\n  // Nine Zeroes for Billions\n  !num\n    ? \"\"\n    : Math.abs(Number(num)) >= 1.0e9\n    ? (Math.abs(Number(num)) / 1.0e9).toFixed(2) + \"B\"\n    : // Six Zeroes for Millions\n    Math.abs(Number(num)) >= 1.0e6\n    ? (Math.abs(Number(num)) / 1.0e6).toFixed(2) + \"M\"\n    : // Three Zeroes for Thousands\n    Math.abs(Number(num)) >= 1.0e3\n    ? (Math.abs(Number(num)) / 1.0e3).toFixed(2) + \"K\"\n    : Math.abs(Number(num));\n\nconst TabularViewer = (props) => {\n  const classes = useStyles();\n  const { handleSortChange } = props;\n  return (\n    <TableWrapper>\n      <TableContainer component={Paper}>\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"a dense table\"\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <TableHeadingWrapper>\n                  Country name\n                  <SortingArrowWrapper>\n                    <ArrowUp onClick={() => handleSortChange(\"country\", 1)} />\n                    <ArrowDown\n                      onClick={() => handleSortChange(\"country\", -1)}\n                    />\n                  </SortingArrowWrapper>\n                </TableHeadingWrapper>\n              </TableCell>\n              <TableCell align=\"right\">\n                <TableHeadingWrapper>\n                  Capital\n                  <SortingArrowWrapper>\n                    <ArrowUp onClick={() => handleSortChange(\"capital\", 1)} />\n                    <ArrowDown\n                        onClick={() => handleSortChange(\"capital\", -1)}\n                    />\n                  </SortingArrowWrapper>\n                </TableHeadingWrapper>\n              </TableCell>\n              <TableCell align=\"right\">\n                <TableHeadingWrapper>\n                  Approx (population)\n                  <SortingArrowWrapper>\n                    <ArrowUp onClick={() => handleSortChange(\"population\", 1)} />\n                    <ArrowDown\n                        onClick={() => handleSortChange(\"population\", -1)}\n                    />\n                  </SortingArrowWrapper>\n                </TableHeadingWrapper>\n              </TableCell>\n              <TableCell align=\"right\">\n                <TableHeadingWrapper>\n                  National language\n                  <SortingArrowWrapper>\n                    <ArrowUp onClick={() => handleSortChange(\"language\", 1)} />\n                    <ArrowDown\n                        onClick={() => handleSortChange(\"language\", -1)}\n                    />\n                  </SortingArrowWrapper>\n                </TableHeadingWrapper>\n              </TableCell>\n              <TableCell align=\"right\">\n                <TableHeadingWrapper>\n                  President\n                  <SortingArrowWrapper>\n                    <ArrowUp onClick={() => handleSortChange(\"president\", 1)} />\n                    <ArrowDown\n                        onClick={() => handleSortChange(\"president\", -1)}\n                    />\n                  </SortingArrowWrapper>\n                </TableHeadingWrapper>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {props.data?.length ? <RenderTableBody data={props.data} /> : null}\n        </Table>\n      </TableContainer>\n    </TableWrapper>\n  );\n};\n\nconst RenderTableBody = ({ data }) => (\n  <TableBody>\n    {data.map((row, idx) => (\n      <TableRow key={idx}>\n        <TableCell>{row.country}</TableCell>\n        <TableCell align=\"left\">{row.capital}</TableCell>\n        <TableCell align=\"left\">\n          {convertToInternationalCurrencySystem(row.population)}\n        </TableCell>\n        <TableCell align=\"left\">{row.language}</TableCell>\n        <TableCell align=\"left\">{row.president}</TableCell>\n      </TableRow>\n    ))}\n  </TableBody>\n);\n\nexport default TabularViewer;\n","\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { CSVReader } from 'react-papaparse'\n\n\nconst FileUploader = ({ open, csvData, onFileUpload, onRemoveFile, fileUploadAction, cancelAction }) => {\n    return (\n        <Dialog\n            open={open}\n            onClose={cancelAction}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{\"Upload new CSV data\"}</DialogTitle>\n\n            <DialogContent>\n                <CSVReader\n                    onDrop={onFileUpload}\n                    onRemoveFile={onRemoveFile}\n                    addRemoveButton\n                    noClick\n                >\n                    Drop a CSV to upload\n                </CSVReader>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={cancelAction} color=\"primary\">\n                    Cancel\n                        </Button>\n                <Button disabled={!csvData} onClick={fileUploadAction} color=\"primary\" autoFocus>\n                    Upload\n                 </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default FileUploader;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PaginationBar from \"../paginationBar\";\nimport TabularViewer from \"../tabularViewer\";\nimport { CSVLink } from \"react-csv\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport FileUploader from \"./fileUploader\";\n\nconst PageContainer = styled.div`\n  width: 90%;\n  max-width: 1200px;\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  padding: 50px;\n  gap: 20px;\n  th {\n    font-weight: bold;\n  }\n`;\n\nconst TopSectionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FiltersWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  gap: 12px;\n`;\n\nconst SearchBar = styled.input`\n  border-radius: 10px;\n  border: 1px solid #ddd;\n  color: #7d96a1;\n  outline: none;\n  padding: 10px;\n  width: 100%;\n  max-width: 200px;\n`;\n\nconst Filter = styled.select`\n  border-radius: 10px;\n  border: 1px solid #ddd;\n  color: #7d96a1;\n  font-weight: bold;\n  width: 100%;\n  max-width: 110px;\n  outline: none;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  a {\n    text-decoration: none !important;\n  }\n`;\n\nconst Button = styled.div`\n  border-radius: 10px;\n  outline: none;\n  color: #ffffff;\n  background-color: salmon;\n  cursor: pointer;\n  padding: 7px;\n  font-size: 12px;\n  text-align: center;\n  width: 80px;\n`;\nconst CSV_TEMPLATE = [\n  [\"country\", \"capital\", \"population\", \"language\", \"president\"],\n];\n\nconst CsvUploaderComponent = ({\n  state,\n  handleChange,\n  handlePageChange,\n  handlePageLimitChange,\n  onFileUpload,\n  uploadFileToDb,\n  handleSearchTextChange,\n  handleSortChange,\n  handleFilterChange,\n  removeAllCountries,\n}) => {\n  const [openFileUploader, setOpenFileUploader] = useState(false);\n  return (\n    <PageContainer>\n      <TopSectionWrapper>\n        <FiltersWrapper>\n          <SearchBar\n            placeholder=\"Search...\"\n            onChange={(e) => handleSearchTextChange(e.target.value)}\n          />\n          <Filter\n            value={state.filters?.country}\n            onChange={(e) => handleFilterChange(\"country\", e.target.value)}\n          >\n            <option value={\"ALL\"}>Country:all</option>\n            {state.filterData?.country?.length\n              ? state.filterData.country.map((country) => {\n                  return <option value={country}>{country}</option>;\n                })\n              : null}\n          </Filter>\n\n          <Filter\n            value={state.filters?.capital}\n            onChange={(e) => handleFilterChange(\"capital\", e.target.value)}\n          >\n            <option value={\"ALL\"}>Capital:all</option>\n            {state.filterData?.capital?.length\n              ? state.filterData.capital.map((capital) => {\n                  return <option value={capital}>{capital}</option>;\n                })\n              : null}\n          </Filter>\n\n          <Filter\n            value={state.filters?.population}\n            onChange={(e) => handleFilterChange(\"population\", e.target.value)}\n          >\n            <option value={\"ALL\"}>Population:all</option>\n            {state.data?.length && (\n              <>\n                <option value={`0-1000000`}>0-10m</option>\n                <option value={`1000000-1000000000`}>10m-1b</option>\n                <option value={`1000000000-100000000000`}>1b-100b</option>\n                <option value={`100000000000-above`}>100b-above</option>\n              </>\n            )}\n          </Filter>\n\n          <Filter\n            value={state.filters?.language}\n            onChange={(e) => handleFilterChange(\"language\", e.target.value)}\n          >\n            <option value={25}>Language:all</option>\n            {state.filterData?.language?.length\n              ? state.filterData.language.map((language) => {\n                  return <option value={language}>{language}</option>;\n                })\n              : null}\n          </Filter>\n\n          <Filter\n            value={state.filters?.president}\n            onChange={(e) => handleFilterChange(\"president\", e.target.value)}\n          >\n            <option value={\"\"}>President:all</option>\n            {state.filterData?.president?.length\n              ? state.filterData.president.map((president) => {\n                  return <option value={president}>{president}</option>;\n                })\n              : null}\n          </Filter>\n        </FiltersWrapper>\n        <ButtonWrapper>\n          <Button onClick={removeAllCountries}>Clear data</Button>\n          <CSVLink filename={\"csv-template.csv\"} data={CSV_TEMPLATE}>\n            <Button>Template</Button>\n          </CSVLink>\n          <Button onClick={() => setOpenFileUploader(true)}>Upload</Button>\n        </ButtonWrapper>\n      </TopSectionWrapper>\n\n      {state.isLoading && <LinearProgress />}\n      <TabularViewer data={state.data} handleSortChange={handleSortChange} />\n\n      <PaginationBar\n        hideFirstLastPages\n        pageRangeDisplayed={3}\n        activePage={state.activePage}\n        itemsCountPerPage={state.limit}\n        totalItemsCount={state.dataCount}\n        onChange={handlePageChange}\n        pageLimit={state.limit}\n        onPageLimitChange={handlePageLimitChange}\n      />\n\n      <FileUploader\n        open={openFileUploader}\n        csvData={state.csvData}\n        onFileUpload={onFileUpload}\n        onRemoveFile={() => handleChange(\"csvData\", \"\")}\n        fileUploadAction={() => {\n          setOpenFileUploader(false);\n          uploadFileToDb();\n        }}\n        cancelAction={() => setOpenFileUploader(false)}\n      />\n    </PageContainer>\n  );\n};\n\nexport default CsvUploaderComponent;\n","export const SaveCountries = async (data) => {\n  let error = \"\";\n  let response = await fetch(\"http://localhost:3001/add-countries\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).catch((err) => (error = err));\n\n  return error ? Promise.reject(error) : Promise.resolve(response.json());\n};\n\nexport const GetCountries = async (data) => {\n  let error = \"\";\n  let response = await fetch(\"http://localhost:3001/get-countries\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).catch((err) => (error = err));\n\n  return error ? Promise.reject(error) : Promise.resolve(response.json());\n};\n\nexport const GetFilters = async () => {\n  let error = \"\";\n  let response = await fetch(\"http://localhost:3001/get-filters\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).catch((err) => (error = err));\n\n  return error ? Promise.reject(error) : Promise.resolve(response.json());\n};\n\n\nexport const RemoveCountries = async () => {\n  let error = \"\";\n  let response = await fetch(\"http://localhost:3001/remove-countries\", {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).catch((err) => (error = err));\n\n  return error ? Promise.reject(error) : Promise.resolve(response.json());\n};","import React, { Component } from \"react\";\nimport CsvUploaderComponent from \"./component\";\nimport {\n  SaveCountries,\n  GetCountries,\n  GetFilters,\n  RemoveCountries,\n} from \"../../services/csv-upload\";\nimport { debounce } from \"../../utility\";\n\nclass CsvUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\",\n      filterData: \"\",\n      dataCount: 0,\n      searchText: \"\",\n      filters: {\n        country: \"ALL\",\n        capital: \"ALL\",\n        population: \"ALL\",\n        language: \"ALL\",\n        president: \"ALL\",\n      },\n      sortBy: {\n        key: \"\",\n        value: -1,\n      },\n      activePage: 1,\n      limit: 25,\n      skip: 0,\n      csvData: \"\",\n      isLoading: false,\n    };\n  }\n\n  initiateData = () => {\n    this.getData();\n    this.getFilters();\n  };\n\n  componentDidMount = () => this.initiateData();\n\n  /**\n   * handles page change of pagination\n   * @param pageNumber\n   */\n  handlePageChange = async (pageNumber) => {\n    await this.setState({\n      activePage: pageNumber,\n      skip: (pageNumber - 1) * this.state.limit,\n    });\n    this.getData(true);\n  };\n\n  handlePageLimitChange = async (pageLimit) => {\n    await this.setState({\n      activePage: 1,\n      limit: Number(pageLimit) || 25,\n    });\n    this.getData(false);\n  };\n\n  handleSearchTextChange = async (text) => {\n    await this.setState({\n      searchText: text,\n    });\n    this.callFuncDelay();\n  };\n  callFuncDelay = debounce(() => this.getData(false), 500);\n\n  handleSortChange = async (columnName, order) => {\n    await this.setState({\n      sortBy: {\n        key: columnName,\n        value: order,\n      },\n    });\n    this.getData(true);\n  };\n\n  handleFilterChange = async (filterName, value) => {\n    await this.setState({\n      filters: {\n        ...this.state.filters,\n        [filterName]: value,\n      },\n    });\n    this.getData(false);\n  };\n\n  isFilterChange = () => {\n    let flag = false;\n    const { filters } = this.state;\n    if (\n      (this.state.searchText && this.state.searchText.trim()) ||\n      (filters.country !== \"\" && filters.country !== \"ALL\") ||\n      (filters.capital !== \"\" && filters.capital !== \"ALL\") ||\n      (filters.population !== \"\" && filters.population !== \"ALL\") ||\n      (filters.language !== \"\" && filters.language !== \"ALL\") ||\n      (filters.president !== \"\" && filters.president !== \"ALL\")\n    ) {\n      flag = true;\n      this.setState({ activePage: 1, skip: 0 });\n    }\n    return flag;\n  };\n\n  getDataQuery = (isOnlyPageChange = true) => {\n    const { filters, sortBy } = this.state;\n    let requestObj = {\n      skip: isOnlyPageChange\n        ? (this.state.activePage - 1) * this.state.limit\n        : this.isFilterChange()\n        ? 0\n        : (this.state.activePage - 1) * this.state.limit,\n      limit: this.state.limit,\n    };\n\n    if (this.state.searchText && this.state.searchText.trim()) {\n      requestObj.searchKeys = [\"country\", \"capital\", \"language\", \"president\"];\n      requestObj.searchKeyword = this.state.searchText;\n    }\n    if (filters.country !== \"\" && filters.country !== \"ALL\")\n      requestObj[\"country\"] = filters.country;\n    if (filters.capital !== \"\" && filters.capital !== \"ALL\")\n      requestObj[\"capital\"] = filters.capital;\n    if (filters.population !== \"\" && filters.population !== \"ALL\")\n      requestObj[\"population\"] = filters.population;\n    if (filters.language !== \"\" && filters.language !== \"ALL\")\n      requestObj[\"language\"] = filters.language;\n    if (filters.president !== \"\" && filters.president !== \"ALL\")\n      requestObj[\"president\"] = filters.president;\n    if (sortBy.key) requestObj[\"sortBy\"] = sortBy;\n\n    return requestObj;\n  };\n\n  /**\n   * Get countries data\n   * @param isOnlyPageChange\n   * @returns {Promise<void>}\n   */\n  getData = async (isOnlyPageChange = true) => {\n    this.setState({ isLoading: true });\n    const response = await GetCountries(\n      this.getDataQuery(isOnlyPageChange)\n    ).catch((err) => console.log(\"error   \", err));\n    this.setState({ isLoading: false });\n    if (!response?.responseData) return;\n    const responseData = response.responseData?.countries;\n    const count = response.responseData?.count;\n    this.setState({ data: responseData, dataCount: count });\n  };\n\n  /**\n   * Get filter data\n   * @returns {Promise<void>}\n   */\n  getFilters = async () => {\n    this.setState({ isLoading: true });\n    const response = await GetFilters().catch((err) =>\n      console.log(\"error   \", err)\n    );\n    this.setState({ isLoading: false });\n    if (!response?.responseData?.length) return;\n    this.setState({ filterData: response.responseData[0] });\n  };\n\n  handleChange = (key, value) => {\n    if (!key) return;\n    this.setState({ [key]: value });\n  };\n\n  /**\n   * File upload\n   * @returns\n   * @param data\n   */\n  onFileUpload = (data) => {\n    if (!data) return;\n    this.setState({ csvData: data });\n  };\n\n  uploadFileToDb = async () => {\n    this.setState({ isLoading: true });\n    console.log({ csvData: JSON.stringify(this.state.csvData) });\n    await SaveCountries(this.state.csvData).catch((err) =>\n      console.log(\"error   \", err)\n    );\n    this.initiateData();\n  };\n\n  removeAllCountries = async () => {\n    this.setState({ isLoading: true });\n    await RemoveCountries().catch((err) => console.log(\"error   \", err));\n    this.initiateData();\n  };\n\n  render() {\n    return (\n      <CsvUploaderComponent\n        state={this.state}\n        handlePageChange={this.handlePageChange}\n        handleChange={this.handleChange}\n        onFileUpload={this.onFileUpload}\n        uploadFileToDb={this.uploadFileToDb}\n        handlePageLimitChange={this.handlePageLimitChange}\n        handleSearchTextChange={this.handleSearchTextChange}\n        handleSortChange={this.handleSortChange}\n        handleFilterChange={this.handleFilterChange}\n        removeAllCountries={this.removeAllCountries}\n      />\n    );\n  }\n}\n\nexport default CsvUploader;\n","export const debounce = function (callback, delay) {\n  let timer;\n  return function () {\n    let context = this,\n      args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() => callback.apply(context, args), delay);\n  };\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CsvUploader from '../src/components/csvUploader';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CsvUploader />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}